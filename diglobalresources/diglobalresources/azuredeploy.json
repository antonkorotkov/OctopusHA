{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniqueDnsName": {
      "type": "string",
      "metadata": {
        "description": "Relative DNS name for the traffic manager profile, resulting FQDN will be <uniqueDnsName>.trafficmanager.net, must be globally unique."
      }
    },
    "diorgcommonType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "tmApiVersion": "2015-11-01",
    "diorgcommonName": "diorgcommontools"
  },
  "resources": [
    {
      "apiVersion": "[variables('tmApiVersion')]",
      "type": "Microsoft.Network/trafficManagerProfiles",
      "name": "udxOctopusTrafficManager",
      "location": "global",
      "properties": {
        "profileStatus": "Enabled",
        "trafficRoutingMethod": "Performance",
        "dnsConfig": {
          "relativeName": "[parameters('uniqueDnsName')]",
          "ttl": 30
        },
        "monitorConfig": {
          "protocol": "http",
          "port": 80,
          "path": "/"
        },
        "endpoints": [
          {
            "name": "OctopusLeader",
            "type": "Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints",
            "properties": {
              "target": "octopus-west0.westus.cloudapp.azure.com",
              "endpointStatus": "Enabled",
              "endpointLocation": "westus"
            }
          },
          {
            "name": "OctopusNode1",
            "type": "Microsoft.Network/TrafficManagerProfiles/ExternalEndpoints",
            "properties": {
              "target": "octopus-east0.eastus.cloudapp.azure.com",
              "endpointStatus": "Enabled",
              "endpointLocation": "eastus"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('diorgcommonName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "diorgcommon"
      },
      "properties": {
        "accountType": "[parameters('diorgcommonType')]"
      }
    }
  ]
}
