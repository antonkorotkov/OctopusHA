{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "databaseName": {
      "type": "string"
    },
    "sqlserverName": {
      "type": "string"
    },
    "existingRIPResourceGroupName": {
      "type": "string"

    },
    "existingRIPResourceGroupNameeuw": {
      "type": "string"

    },
    "existingRIPName": {
      "type": "string"

    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    }
  },
  "variables": {
    "MasterpublicIPAddressID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('existingRIPResourceGroupName'),'/providers/Microsoft.Network/publicIPAddresses/',concat(parameters('existingRIPName'), '0'))]",
    "Node1publicIPAddressID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('existingRIPResourceGroupName'),'/providers/Microsoft.Network/publicIPAddresses/',concat(parameters('existingRIPName'), '1'))]",
    "Node2publicIPAddressID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('existingRIPResourceGroupNameeuw'),'/providers/Microsoft.Network/publicIPAddresses/',concat(parameters('existingRIPName'), '0'))]",
    "Node3publicIPAddressID": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('existingRIPResourceGroupNameeuw'),'/providers/Microsoft.Network/publicIPAddresses/',concat(parameters('existingRIPName'), '1'))]"
  },
  "resources": [
    {
      "name": "[parameters('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
      "resources": [
        {
          "name": "[parameters('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
          ],
          "properties": {
            "edition": "[parameters('edition')]",
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowOctopusMaster",
          "properties": {
            "endIpAddress": "[reference(variables('MasterpublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
            "startIpAddress": "[reference(variables('MasterpublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowOctopusNode1",
          "properties": {
            "endIpAddress": "[reference(variables('Node1PublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
            "startIpAddress": "[reference(variables('Node1PublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowOctopusNode2",
          "properties": {
            "endIpAddress": "[reference(variables('Node2publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
            "startIpAddress": "[reference(variables('Node2publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowOctopusNode3",
          "properties": {
            "endIpAddress": "[reference(variables('Node3publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
            "startIpAddress": "[reference(variables('Node3publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "fqdn": {
      "value": "[reference(variables('MasterpublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn]",
      "type": "string"
    },
    "ipaddress": {
      "value": "[reference(variables('MasterpublicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).ipAddress]",
      "type": "string"
    }
  }
}